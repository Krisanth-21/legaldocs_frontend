import { DocumentAnalysis } from '../types/document';

export const generatePDF = (analysis: DocumentAnalysis) => {
  // Create HTML content for the PDF
  const htmlContent = `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <title>Legal Document Analysis Report</title>
      <style>
        body {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
          line-height: 1.6;
          color: #333;
          max-width: 800px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          text-align: center;
          border-bottom: 2px solid #1e3a8a;
          padding-bottom: 20px;
          margin-bottom: 30px;
        }
        .header h1 {
          color: #1e3a8a;
          margin: 0;
          font-size: 28px;
        }
        .header p {
          color: #6b7280;
          margin: 5px 0 0 0;
        }
        .section {
          margin-bottom: 25px;
          padding: 20px;
          border: 1px solid #e5e7eb;
          border-radius: 8px;
        }
        .section h2 {
          color: #1e3a8a;
          margin-top: 0;
          font-size: 18px;
          border-bottom: 1px solid #e5e7eb;
          padding-bottom: 10px;
        }
        .summary {
          background-color: #f8fafc;
          border-left: 4px solid #1e3a8a;
        }
        .risks {
          background-color: #fef2f2;
          border-left: 4px solid #dc2626;
        }
        .obligations {
          background-color: #f0fdf4;
          border-left: 4px solid #16a34a;
        }
        .list-item {
          margin-bottom: 8px;
          padding-left: 15px;
          position: relative;
        }
        .list-item:before {
          content: "•";
          position: absolute;
          left: 0;
          color: #6b7280;
        }
        .risk-item:before {
          content: "⚠";
          color: #dc2626;
        }
        .obligation-item:before {
          content: "✓";
          color: #16a34a;
        }
        .meta-info {
          background-color: #f9fafb;
          padding: 15px;
          border-radius: 6px;
          margin-bottom: 20px;
          font-size: 14px;
          color: #6b7280;
        }
        .footer {
          text-align: center;
          margin-top: 40px;
          padding-top: 20px;
          border-top: 1px solid #e5e7eb;
          font-size: 12px;
          color: #9ca3af;
        }
      </style>
    </head>
    <body>
      <div class="header">
        <h1>Legal Document Analysis Report</h1>
        <p>Generated by LegalDoc Analyzer</p>
      </div>

      <div class="meta-info">
        <strong>Document:</strong> ${analysis.fileName}<br>
        <strong>Analysis Date:</strong> ${analysis.uploadDate.toLocaleDateString()}<br>
        <strong>File Size:</strong> ${(analysis.fileSize / 1024).toFixed(1)} KB
      </div>

      <div class="section summary">
        <h2>Executive Summary</h2>
        <p>${analysis.summary}</p>
      </div>

      <div class="section">
        <h2>Key Clauses & Important Points</h2>
        ${analysis.key_clauses.map(clause => `<div class="list-item">${clause}</div>`).join('')}
      </div>

      <div class="section risks">
        <h2>Potential Risks & Concerns</h2>
        ${analysis.risks.map(risk => `<div class="list-item risk-item">${risk}</div>`).join('')}
      </div>

      <div class="section obligations">
        <h2>Recommended Next Steps</h2>
        ${analysis.next_steps.map(step => `<div class="list-item obligation-item">${step}</div>`).join('')}
      </div>

      <div class="footer">
        <p>This report was generated by LegalDoc Analyzer AI system. Please consult with qualified legal professionals for specific legal advice.</p>
      </div>
    </body>
    </html>
  `;

  // Create a blob and download link
  const blob = new Blob([htmlContent], { type: 'text/html' });
  const url = URL.createObjectURL(blob);
  const link = document.createElement('a');
  link.href = url;
  link.download = `legal-analysis-${analysis.fileName.replace(/\.[^/.]+$/, '')}-${new Date().toISOString().split('T')[0]}.html`;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
  URL.revokeObjectURL(url);
};